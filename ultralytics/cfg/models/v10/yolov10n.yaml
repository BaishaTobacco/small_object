# Parameters
nc: 2 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, SCDown, [512, 3, 2]] # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, SCDown, [1024, 3, 2]] # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 1, PSA, [1024]] # 10

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]]  # P4
  - [-1, 3, C2f, [512]]  # C2f module

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]]  # P3
  - [-1, 3, C2f, [256]]  # C2f module (small-scale detection)

  - [-1, 1, Conv, [256, 3, 2]]  # Conv for downsampling
  - [[-1, 13], 1, Concat, [1]]  # P4

  - [-1, 3, C2f, [512]]  # C2f module (medium-scale detection)
  - [-1, 1, SCDown, [512, 3, 2]]  # SCDown for downsampling
  - [[-1, 10], 1, Concat, [1]]  # P5

  - [-1, 3, C2fCIB, [1024, True, True]]  # C2fCIB (large-scale detection)

  # Detect branches for keypoints and BBAVectors
  - [[16, 19, 22], 1, v10Detect, [nc]]  # Final detection layers
